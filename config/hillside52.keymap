/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "outer-keys.h"
#include "combos.h"
#include "keymap-german-rev3.h"
#include "keymap-linux.h"
#include "keymap-phpstorm.h"

#define DVORAK_L 0
#define DK_HRM_L 1
#define NUM_L    2
#define NAV_L    3
#define PHP_L    4
#define ADJ_L    5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        sm: slow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SLOW_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            quick_tap_ms = <300>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        combos {
                compatible = "zmk,combos";

                // key numbers
                //       0   1   2   3   4   5                      6   7   8   9  10  11
                //      12 [13][14][15][16] 17                     18 [19][20][21][22] 23
                //      24  25 [26] 27  28  29  30             31  32  33  34 [35] 36  37
                //      38  39  40     (41) 42  43  44     45  46  47 (48)     49  50  51

                //<editor-fold desc="Kombol Layout 1.1">
                // see https://github.com/skychil/kombol
                // todo* = doesn't work yet

                // row 0                   []                                        ()
                COMBO( 1,  2, DE______) /* free        */ COMBO( 6,  7, DE______) // free
                COMBO( 2,  3, DE_LBKT ) /* [           */ COMBO( 7,  8, DE_LPAR ) // (
                COMBO( 3,  4, DE_RBKT ) /* ]           */ COMBO( 8,  9, DE_RPAR ) // )
                COMBO( 4,  5, DE______) /* free        */ COMBO( 9, 10, DE______) // free
                COMBO( 2,  4, DE_TODO_) /* [] <-       */ COMBO( 7,  9, DE_TODO_) // () <-

                // row 1                   -=+                                       |"'
                COMBO(13, 14, DE______) /* free        */ COMBO(18, 19, DE_PIPE ) // |
                COMBO(14, 15, DE_MINUS) /* -           */ COMBO(19, 20, DE_DQT  ) // "
                COMBO(15, 16, DE_EQUAL) /* =           */ COMBO(20, 21, DE_SQT  ) // '
                COMBO(16, 17, DE_PLUS ) /* +           */ COMBO(21, 22, DE______) // free
                COMBO(14, 16, S(INS)  ) /* Shift+Insert*/ COMBO(19, 21, DE______) // free

                // row 2                   {}                                        <>
                COMBO(26, 27, DE_LBRC ) /* {           */ COMBO(32, 33, DE______) // free
                COMBO(27, 28, DE_RBRC ) /* }           */ COMBO(33, 34, DE_LT   ) // <
                COMBO(28, 29, DE______) /* free        */ COMBO(34, 35, DE_GT   ) // >
                COMBO(26, 28, DE_TODO_) /* {} <-       */ COMBO(33, 35, DE_TODO_) // <> <-

                // row 0+1                 @#$%                                      ^&*\
                COMBO( 1, 13, DE______) /* free        */ COMBO( 6, 18, DE_CARET) // ^ todo*
                COMBO( 2, 14, DE_AT   ) /* @           */ COMBO( 7, 19, DE_AMPS ) // &
                COMBO( 3, 15, DE_HASH ) /* #           */ COMBO( 8, 20, DE_STAR ) // *
                COMBO( 4, 16, DE_DLLR ) /* $           */ COMBO( 9, 21, DE_BSLH ) // \
                COMBO( 5, 17, DE_PRCNT) /* %           */ COMBO(10, 22, DE______) // free todo*

                // row 1+2                 ``~                                       "'
                COMBO(14, 26, DE_TODO_) /* `` <-       */ COMBO(18, 32, DE______) // free
                COMBO(15, 27, DE_GRAVE) /* `           */ COMBO(19, 33, DE_TODO_) // "" <-
                COMBO(16, 28, DE_TILDE) /* ~           */ COMBO(20, 34, DE_TODO_) // '' <-
                COMBO(17, 29, DE______) /* free        */ COMBO(21, 35, DE______) // free

                // row 0+1 diagonal        !                                         ?
                COMBO(14,  3, DE______) /* free        */ COMBO(18,  7, DE______) // free
                COMBO( 3, 16, DE_EXCL ) /* !           */ COMBO(19,  8, DE_QMARK) // ? todo*
                COMBO( 4, 17, DE______) /* free        */ COMBO( 8, 21, DE______) // free todo*

                // row 1+2 diagonal        _                                         :
                COMBO(26, 15, DE______) /* free        */ COMBO(32, 19, DE______) // free todo*
                COMBO(15, 28, DE_UNDER) /* _           */ COMBO(33, 20, DE_COLON) // :
                COMBO(16, 28, DE______) /* free        */ COMBO(20, 35, DE______) // free todo*
                //</editor-fold>
        };

        keymap {
                compatible = "zmk,keymap";

                dvorak_layer {
/* DVORAK
 * -----------------------------------------------------------------------------------------------------------------------------
 * |   '   |   ,   |   .   |   P   |   Y   |-----------------------------------|   F   |   G   |   C   |   R   |   L   |   /   |
 * |   A   |   O   |   E   |   U   |   I   |-----------------------------------|   D   |   H   |   T   |   N   |   S   |   -   |
 * |   ;   |   Q   |   J   |   K   |   X   | HRM_L |-------------------|   Z   |   B   |   M   |   W   |   V   |
 */
                        bindings = <
LOP_1         &kp  DE_SQT   &kp  DE_COMMA &kp  DE_DOT   &kp  P        &kp  DE_Y                                                                      &kp  F        &kp  G        &kp  C        &kp  R        &kp  L        &kp DE_FSLH
LOP_2         &kp  A        &kp  O        &kp  E        &kp  U        &kp  I                                                                         &kp  D        &kp  H        &kp  T        &kp  N        &kp  S        &kp DE_MINUS
LOP_3         &kp  DE_SEMI  &kp  Q        &kp  J        &kp  K        &kp  X        LT_2_1                                             RT_2_1        &kp  B        &kp  M        &kp  W        &kp  V        RAR_0         ROP_3
LAR_1         LAR_2         LAR_3                       LT_4          LT_3          LT_2           LT_1                  RT_1          RT_2          RT_3          RT_4                        RAR_1         RAR_2         RAR_3
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
                };

                dvorak_hrm_layer {
                        bindings = <
LOP_1         &kp  DE_SQT   &kp  DE_COMMA &kp  DE_DOT   &kp  P        &kp  DE_Y                                                                      &kp  F        &kp  G        &kp  C        &kp  R        &kp  L        &kp DE_FSLH
LOP_2         &hm  LGUI A   &hm  LALT O   &hm  LCTRL E  &hm  LSHIFT U &kp  I                                                                         &kp  D        &hm  LSHIFT H &hm  LCTRL T  &hm  LALT N   &hm  LGUI S   &kp DE_MINUS
LOP_3         &kp  DE_SEMI  &hm  RALT Q   &kp  J        &kp  K        &kp  X        LT_2_1                                             RT_2_1        &kp  B        &kp  M        &kp  W        &hm  RALT V   RAR_0         ROP_3
LAR_1         LAR_2         LAR_3                       LT_4          LT_3          LT_2           LT_1                  RT_1          RT_2          RT_3          RT_4                        RAR_1         RAR_2         RAR_3
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LEFT RIGHT>;
                };

                numbers_layer {
                    // _<>():      N789_x     <>: Shift(Tab), Tab
                    // _GACS.      =456_x     _: frei, x: frei
                    // _*/-+,      %123Ux     U: Up
                    // ___ ____  __0_ <D>     D: Down
                        bindings = <
&trans  &kp LS(TAB)      &kp TAB        &kp DE_LPAR   &kp DE_RPAR  &kp DE_COLON                                                    &kp KP_NUM   &kp KP_N7  &kp KP_N8  &kp KP_N9  &none  &none
&trans  &kp LGUI         &kp LALT       &kp LCTRL     &kp LSHIFT   &kp DE_DOT                                                      &kp DE_EQUAL &kp KP_N4  &kp KP_N5  &kp KP_N6  &none  &none
&trans  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_MINUS  &kp KP_PLUS  &kp DE_COMMA  &none                                  &none      &kp PERCENT  &kp KP_N1  &kp KP_N2  &kp KP_N3  RAR_0  &none
&trans  &trans           &trans                       &trans       &trans        &kp K_CALC     &trans       &trans     &trans     &kp KP_N0    &trans                RAR_1      RAR_2  RAR_3
                        >;

                        sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp LEFT RIGHT>;
                };

                nav_layer {
                        bindings = <
&kp F3      &kp LC(F)       U_SWI_POP           &kp LC(R)            &kp F5            U_ADRBAR                                                     &kp PG_UP   &kp HOME     &kp UP       &kp END    &none    &none
&kp LS(F3)  &sm LGUI LC(A)  &sm LALT LS(LC(C))  &sm LCTRL LS(LC(V))  &sm LSHIFT SPACE  P_COMENT                                                     &kp PG_DN   &kp LEFT     &kp DOWN     &kp RIGHT  &kp ESC  P_COLAPS
&none       &kp LC(X)       &kp LC(C)           &kp LC(V)            &kp LC(DE_Z)      &kp LS(LC(DE_Z))  &none                           &none      &kp INSERT  &kp LS(TAB)  &kp DE_FSLH  &kp TAB    RAR_0    P_EXPAND
&none       &none           &none                                    LT_4              LT_3              &trans  &kp LG(L)    &kp RTK_1  &kp RTK_2  &kp K_APP   RT_4                      RAR_1      RAR_2    RAR_3
                        >;

                        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp UP DOWN>;
                };

                phpstorm_layer {
                        bindings = <
&none     &none     &none        &none         P_COMENT       &none                                      &none  &none  &none  &none     &none     &none
&none     &none     &sm LALT P_  &sm LCTRL P_  &sm LSHIFT P_  P_COMENT                                   &none  &none  &none  &none     &none     &none
&none     &none     P_EXT_S      P_STRPOP      P_SELECT       &none     &none                  &none     &none  &none  &none  &none     P_DIFPRV  &none
&none     &none     &none                      LT_4           &trans    &none  &none    &none  P_ACTION  &none  RT_4          P_CMPPRV  P_DIFNXT  P_CMPNXT
                        >;

                        sensor-bindings = <&inc_dec_kp A B &inc_dec_kp DOWN UP>;
                };

                adj_layer {
/* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | DVORAK| TO-DO | TO-DO |       |       |-----------------------------------|       |Prt Scr|       |       |       |       |
 * |       | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       |       |
 * | BOOTL | RESET |       |OUT_USB|OUT_BLE|       |BT CLR |-------------------|       |       |       |       |       |       | SHIFT |
 * ----------------|       |-------|       |       |       |       |---|       |       |       |       |-------| CTRL  |----------------
 */
                        bindings = <
&none         &to  DVORAK_L &to  DVORAK_L &to  DVORAK_L &none         &none                                                                             &none             &kp PRINTSCREEN    &none            &none           &none            &none
&none         &bt  BT_SEL 0 &bt  BT_SEL 1 &bt  BT_SEL 2 &bt  BT_SEL 3 &bt  BT_SEL 4                                                                     &none             &none              &none            &none           &none            &none
&bootloader   &reset        &none         &out OUT_USB  &out OUT_BLE  &none         &bt BT_CLR                                         &none            &none             &none              &none            &none           &none            &trans
&none         &none         &trans                      &trans        &trans        &trans        &trans                 &trans        &trans           &trans            &trans                              &kp  RCTRL      &none            &none
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };
        };
};