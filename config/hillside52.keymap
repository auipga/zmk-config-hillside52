/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "outer-keys.h"
#include "combos.h"
#include "keymap-german-rev3.h"
#include "keymap-linux.h"
#include "keymap-phpstorm.h"

#define DK_HRM_L 0
#define DVORAK_L 1
#define NUM_L    2
#define NAV_L    3
#define PHP_L    4
#define MED_L    5
#define SYM_L    6
#define FUN_L    7

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <300>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        sm: slow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SLOW_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            quick_tap_ms = <300>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        TD_a: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_A";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <U_SYSMON>, <&a1>, <&a2>;
        };
        capsing: tap_dance_caps_word_caps_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&caps_word>, <&kp CAPS>;
        };
    };

    macros {
        // '->' object operator
        ZMK_MACRO(php_oo,    bindings = <&kp DE_MINUS  &kp DE_GT     >; )
        // ' => ' double arrow operator
        ZMK_MACRO(php_dao,   bindings = <&kp SPACE     &kp DE_EQUAL  &kp DE_GT     &kp SPACE     >; )
        // ' = $' space equal space dollar
        ZMK_MACRO(php_ed,    bindings = <&kp SPACE     &kp DE_EQUAL  &kp SPACE     &kp DE_DLLR   >; )

        // other stuff
        ZMK_MACRO(a1,        bindings = <&kp A         &kp RET       >; )
        ZMK_MACRO(a2,        bindings = <&kp RET       &kp A         &kp RET       >; )
    };

        combos {
                compatible = "zmk,combos";

                // key numbers
                //       0   1   2   3   4   5                      6   7   8   9  10  11
                //      12 [13][14][15][16] 17                     18 [19][20][21][22] 23
                //      24  25 [26] 27  28  29  30             31  32  33  34 [35] 36  37
                //      38  39  40     (41) 42  43  44     45  46  47 (48)     49  50  51

                //<editor-fold desc="hrm/AltGr umlauts">
                // Umlauts with AltGr on right half
                COMBO(13, 35, DE_AE)
                COMBO(14, 35, DE_OE)
                COMBO(16, 35, DE_UE)

                // ร with AltGr
                COMBO(22, 26, DE_SS)
                COMBO(22, 35, DE_SS)
                //</editor-fold>

                // for PHP coding:
                // row 0
                COMBO( 2,  3, DE_GRAVE) /* `            */ COMBO( 8,  9, DE_RBRC ) // }
                COMBO( 3,  4, DE_DLLR ) /* $            */ COMBO( 7,  8, DE_LBRC ) // {

                // row 1
                //  is fully engaged with home row mods !!

                // row 2
                COMBC(27, 28, &php_oo ) /* `->`         */ COMBO(33, 34, DE_EQUAL) // =
                COMBC(28, 29, &php_dao) /* ` => ` inner */ COMBC(32, 33, &php_ed ) // ` = $` inner

                // Other
                COMBC( 16, 19, &capsing) // both hrm shifts, 1st caps_word, 2nd CAPS
                COMBC( 17, 18, &tog DVORAK_L)
        };

        keymap {
                compatible = "zmk,keymap";

                dvorak_hrm_layer {
                        bindings = <
LOP_1         &kp  DE_SQT   &kp  DE_COMMA &kp  DE_DOT   &kp  P        &kp  DE_Y                                                                     &kp  F        &kp  G        &kp  C        &kp  R        &kp  L        &kp DE_FSLH
LOP_2         &hm  LGUI A   &hm  LALT O   &hm  LCTRL E  &hm  LSHIFT U &kp  I                                                                        &kp  D        &hm  LSHIFT H &hm  LCTRL T  &hm  LALT N   &hm  LGUI S   &kp DE_MINUS
LOP_3         &kp  DE_SEMI  &hm  RALT Q   &kp  J        &kp  K        &kp  X        LT_2_1                                            RT_2_1        &kp  B        &kp  M        &kp  W        &hm  RALT V   &kp DE_Z      ROP_3
LAR_1         LAR_2         LAR_3                       L_ENC         LT_3          LT_2          LT_1                  RT_1          RT_2          RT_3          R_ENC                       RAR_1         RAR_2         RAR_3
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp P_ P_>;
                };

                dvorak_layer {
                        bindings = <
LOP_1         &kp  DE_SQT   &kp  DE_COMMA &kp  DE_DOT   &kp  P        &kp  DE_Y                                                                     &kp  F        &kp  G        &kp  C        &kp  R        &kp  L        &kp DE_FSLH
LOP_2         &kp  A        &kp  O        &kp  E        &kp  U        &kp  I                                                                        &kp  D        &kp  H        &kp  T        &kp  N        &kp  S        &kp DE_MINUS
LOP_3         &kp  DE_SEMI  &kp  Q        &kp  J        &kp  K        &kp  X        LT_2_1                                            RT_2_1        &kp  B        &kp  M        &kp  W        &kp  V        &kp DE_Z      ROP_3
LAR_1         LAR_2         LAR_3                       L_ENC         LT_3          LT_2          LT_1                  RT_1          RT_2          RT_3          R_ENC                       RAR_1         RAR_2         RAR_3
                        >;
                };

                numbers_layer {
                    // _<>():      N789_x     <>: Shift(Tab), Tab
                    // _GACS.      =456_x     _: frei, x: frei
                    // _*/-+,      %123Ux     U: Up
                    // ___ รฐ___  :.0รฐ <D>     D: Down
                        bindings = <
___        &kp LS(TAB)      &kp TAB       &kp DE_LPAR   &kp DE_RPAR   &kp DE_COLON                                                                  &kp KP_NUM    &kp KP_N7     &kp KP_N8     &kp KP_N9     XXX           XXX  
___        &kp LGUI         &kp LALT      &kp LCTRL     &kp LSHIFT    &kp DE_DOT                                                                    &kp DE_EQUAL  &kp KP_N4     &kp KP_N5     &kp KP_N6     XXX           XXX  
___        &kp KP_MULTIPLY  &kp KP_DIVIDE &kp KP_MINUS  &kp KP_PLUS   &kp DE_COMMA  XXX                                               XXX           &kp PERCENT   &kp KP_N1     &kp KP_N2     &kp KP_N3     RAR_0         XXX  
___        ___              ___                         L_ENC         ___           &kp K_CALC    ___                   &kp DE_COLON  &kp DE_DOT    &kp KP_N0     R_ENC                       RAR_1         RAR_2         RAR_3
                        >;
                };

                nav_layer {
                        bindings = <
LOP_1    U_SWI_POP       &kp LA(ESC)    &kp LC(R)       &kp F5               U_ADRBAR                                                               &kp PG_UP     &kp HOME      &kp UP        &kp END       XXX           XXX
LOP_2    &sm LGUI LC(A)  &sm LALT LC(C) &sm LCTRL LC(V) &sm LSHIFT LC(DE_Z)  P_COMENT                                                               &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp ESC       P_COLAPS
LOP_3    &kp LC(X)       &kp LS(LC(C))  &kp LS(LC(V))   &kp LS(LC(DE_Z))     XXX        XXX                                           XXX           &kp INSERT    &kp LS(TAB)   &kp DE_FSLH   &kp TAB       RAR_0         P_EXPAND
XXX      XXX             XXX                            L_ENC                LT_3       ___       &kp LG(L)             &kp RTK_1     &kp RTK_2     &kp K_APP     R_ENC                       RAR_1         RAR_2         RAR_3
                        >;
                };

                phpstorm_layer {
                        bindings = <
XXX       XXX       XXX                P_FOLD        P_COLAPS       P_EXPAND                                   XXX    XXX    XXX    XXX       XXX       XXX
XXX       XXX       &sm LALT LA(LS(D)) &sm LCTRL P_  &sm LSHIFT P_  P_COMENT                                   XXX    XXX    XXX    XXX       XXX       XXX
XXX       XXX       P_EXT_S            P_STRPOP      P_SELECT       XXX       XXX                    XXX       XXX    XXX    XXX    XXX       P_DIFPRV  XXX
XXX       XXX       XXX                              L_ENC          ___       XXX    XXX      XXX    P_ACTION  XXX    R_ENC         P_CMPPRV  P_DIFNXT  P_CMPNXT
                        >;
                };

                media_layer {
                        bindings = <
YT_SLOWER   YT_FASTER  &kp PRINTSCREEN  U_DARK  &bt BT_SEL 0  &out OUT_USB                                              XXX    XXX    XXX    XXX         XXX        XXX
&kp K_PREV  &kp K_NEXT &kp LS(PSCRN)    U_ZOOM  &bt BT_SEL 1  &out OUT_BLE                                              XXX    XXX    XXX    XXX         XXX        XXX
&kp F       &kp M      &kp PRINTSCREEN  XXX     &bt BT_SEL 2  &bt BT_CLR     &bootloader                  &bootloader   XXX    XXX    XXX    XXX         YT_FASTER  XXX  
LAR_1       LAR_2      ___                      L_ENC         XXX            &reset       XXX      XXX    &reset        XXX    R_ENC         &kp K_PREV  YT_SLOWER  &kp K_NEXT
                        >;

                        sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp P_ P_>;
                };

                symbols_layer {
                        bindings = <
                        // ~@*&\   ^<>/%      combos:     `  $      |         {  }
                        // โฌ:-+    !()"?
                        // ;10|    #[]'_      combos:  ra ra -> =>  |  ` = $` =  ra ra
LOP_1         &kp DE_TILDE  &kp DE_AT     &kp DE_STAR   &kp DE_AMPS   &kp DE_BSLH                                                                   &kp DE_CARET  &kp DE_LT     &kp DE_GT     &kp DE_FSLH   &kp DE_PRCNT  &kp BSPC
LOP_2         &kp DE_EURO   &kp DE_COLON  &kp DE_MINUS  &kp DE_PLUS   XXX                                                                           &kp DE_EXCL   &kp DE_LPAR   &kp DE_RPAR   &kp DE_DQT    &kp DE_QMARK  XXX
LOP_3         &kp DE_SEMI   &kp N1        &kp N0        &kp DE_PIPE   XXX           XXX                                               XXX           &kp DE_HASH   &kp DE_LBKT   &kp DE_RBKT   &kp DE_SQT    &kp DE_UNDER  XXX
LAR_1         LAR_2         LAR_3                       L_ENC         &kp BSPC      LT_2      &kp BSPC                  XXX           ___           XXX           R_ENC                       XXX           XXX           XXX
                        >;

                        sensor-bindings = <&inc_dec_kp u_TAB_PRV u_TAB_NXT &inc_dec_kp P_ P_>;
                };

                function_layer {
                        bindings = <
XXX           XXX           XXX           XXX           XXX           XXX                                                                           XXX           &kp F7        &kp F8        &kp F9        &kp F10       XXX  
XXX           &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHIFT    XXX                                                                           &kp LS(PSCRN) &kp F4        &kp F5        &kp F6        &kp F11       XXX  
XXX           XXX           XXX           XXX           XXX           XXX           XXX                                               XXX           &kp PSCRN     &kp F1        &kp F2        &kp F3        &kp F12       XXX  
XXX           XXX           XXX                         L_ENC         LT_3          LT_2          LT_1                  XXX           XXX           ___           R_ENC                       XXX           XXX           XXX  
                        >;

                        sensor-bindings = <&inc_dec_kp u_BRI_DN u_BRI_UP &inc_dec_kp P_ P_>;
                };
        };
};